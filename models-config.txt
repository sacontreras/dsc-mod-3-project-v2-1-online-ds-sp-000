{
    "dask": {
        "use": false,

        "is_remote": false,

        "local": {
            "n_workers": 1,
            "n_jobs": 8,
            "memory_limit": "16GB"
        },

        "remote": {
            "scheduler_address": "35.230.13.87"
        }
    },

    /*
    "data_cached": {
        "digest": "1d7f80e43261a7589d64368eab8a2853",

        "eda_desc": {
            "short": "0.10 test_ratio, flat insig cat hat handling with threshold 10; location based on lat/lon"
        },

        "wrangled_data": {
            "fname_ext": "csv",

            "train": {
                "fname_prefix": "wrangled-labeled-data-train"
            },
            "test": {
                "fname_prefix": "wrangled-labeled-data-test"
            },
            "unlabeled": {
                "fname_prefix": "wrangled-unlabeled-data"
            }
        },

        "labels": {
            "fname_ext": "csv",

            "train": {
                "fname_prefix": "labels-train"
            },
            "test": {
                "fname_prefix": "labels-test"
            }
        }
    },
    */

    //the random_state seed used throughout the project
    "SEED": 42,

    "DecisionTreeClassifier": {
        "run": false,

        "trials": {
            "run": false,

            "array": [
                {
                    "gridsearch": {
                        "run": false,

                        "param_grid": {
                            "criterion": ["entropy", "gini"], 
                            "splitter": ["best"],
                            "max_depth": [10, 50, 75, null],
                            "min_samples_split": [2],
                            "max_features": ["auto", "sqrt", "log2"]
                        },

                        //don't forget to update this after grid search... and then set grid search to false... if the intention is to find a new best_params via grid search
                        "last_best": {
                            "criterion": "entropy", 
                            "splitter": "best",
                            "max_depth": null,
                            "min_samples_split": 2,
                            "max_features": "sqrt"
                        }
                    }
                }
            ]
        },

        //these will be used when trials['run']==false
        "params": {
            "criterion": "entropy", 
            "splitter": "best",
            "max_depth": null,
            "min_samples_split": 2,
            "max_features": "sqrt"
        }
    },

    "RandomForestClassifier": {
        "run": false,

        "trials": {
            "run": false,

            "array": [
                {
                    "gridsearch": {
                        "run": false,

                        "param_grid": {
                            "bootstrap": [true, false], 
                            "criterion": ["entropy", "gini"], 
                            "max_features": ["auto", "sqrt", "log2"], 
                            "max_depth": [10, 50, 75, null], 
                            "n_estimators": [100, 500, 1000]
                        },

                        //don't forget to update this after grid search... and then set grid search to false... if the intention is to find a new best_params via grid search
                        "last_best": {
                            "bootstrap": true,
                            "criterion": "entropy",
                            "max_depth": 75,
                            "max_features": "auto",
                            "n_estimators": 1000
                        }
                    }
                }
            ]
        },

        //these will be used when trials['run']==false
        "params": {
            "bootstrap": true,
            "criterion": "entropy",
            "max_depth": 75,
            "max_features": "auto",
            "n_estimators": 1000
        }
    },

    "XGBClassifier": {
        "run": true,

        "trials": {
            "run": true,

            // for XGBClassifier, we break up gridsearch into trials and manipulate a single parameter at a time, building on prior results... since gridsearch takes so much time
            "array": [
                // n_estimators tuning
                {
                    "gridsearch": {
                        "run": true,

                        "param_grid": {
                            "n_estimators": [100, 500, 750, 1000]
                        },

                        "last_best": {
                            "n_estimators": 100
                        }
                    }
                },

                // max_depth tuning
                {
                    "gridsearch": {
                        "run": true,

                        // try with number of features
                        "param_grid": {
                            "max_depth": [3, 5, 10, 22, 50]
                        },

                        "last_best": {
                            "max_depth": 3
                        }
                    }
                },

                // learning_rate tuning
                {
                    "gridsearch": {
                        "run": true,

                        "param_grid": {
                            "learning_rate": [0.1, 0.3, 0.6, 1.0]
                        },

                        "last_best": {
                            "learning_rate": 0.1
                        }
                    }
                },

                // min_child_weight tuning
                {
                    "gridsearch": {
                        "run": true,

                        "param_grid": {
                            "min_child_weight": [1, 3, 5]
                        },

                        "last_best": {
                            "min_child_weight": 1
                        }
                    }
                },

                // subsample tuning
                {
                    "gridsearch": {
                        "run": true,

                        "param_grid": {
                            "subsample": [0.1, 0.25, 0.5, 1.0]
                        },

                        "last_best": {
                            "subsample": 1.0
                        }
                    }
                },

                // gamma tuning
                {
                    "gridsearch": {
                        "run": true,

                        "param_grid": {
                            "gamma": [0, 1, 2, 5, 10]
                        },

                        "last_best": {
                            "gamma": 5
                        }
                    }
                }
            ]
        },

        //these will be used when trials['run']==false
        "params": {
            "learning_rate": 0.1,
            "max_depth": 3,
            "min_child_weight": 1,
            "subsample": 1.0,
            "gamma": 5,
            "n_estimators": 100
        }
    }
}