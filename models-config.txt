{
    "logging": {
        "dir": "model-results"
    },

    "cross_validation": {
        "k": {
            "grid_search": 3,
            "score": 5
        }
    },
    
    "dask": {
        "use": false,

        "is_remote": false,

        "local": {
            "n_workers": 1,
            "n_jobs": 8,
            "memory_limit": "16GB"
        },

        "remote": {
            "scheduler_address": "35.230.13.87"
        }
    },

    /*
    "data_cached": {
        "digest": "1d7f80e43261a7589d64368eab8a2853",

        "eda_desc": {
            "short": "0.10 test_ratio, flat insig cat hat handling with threshold 10; location based on lat/lon"
        },

        "wrangled_data": {
            "fname_ext": "csv",

            "train": {
                "fname_prefix": "wrangled-labeled-data-train"
            },
            "test": {
                "fname_prefix": "wrangled-labeled-data-test"
            },
            "unlabeled": {
                "fname_prefix": "wrangled-unlabeled-data"
            }
        },

        "labels": {
            "fname_ext": "csv",

            "train": {
                "fname_prefix": "labels-train"
            },
            "test": {
                "fname_prefix": "labels-test"
            }
        }
    },
    */

    //the random_state seed used throughout the project
    "SEED": 42,

    "DecisionTreeClassifier": {
        "run": false,

        "trials": {
            "run": true,

            "array": [
                {
                    "gridsearch": {
                        "run": true,

                        "param_grid": {
                            "criterion": ["entropy", "gini"], 
                            "splitter": ["best"],
                            "max_depth": [10, 50, 75, null],
                            "min_samples_split": [2],
                            "max_features": ["auto", "sqrt", "log2"]
                        },

                        // don't forget to update this after grid search... and then set grid search to false... if the intention is to find a new best_params via grid search
                        //      these will be used when ['DecisionTreeClassifier']['trials']['run']==true AND ['DecisionTreeClassifier']['trials']['array'][n]['gridsearch']['run']==false
                        //          in this way, we can turn on/off gridsearch for individual trials
                        //
                        // these are the results of running grid search on preprocessed data sets with digest d6a76cbd7fb874262adbd0e4a705fc31
                        "last_best": {   
                            "criterion": "gini",
                            "max_depth": 10,
                            "max_features": "auto",
                            "min_samples_split": 2,
                            "random_state": 42,
                            "splitter": "best"
                        }
                    }
                }
            ]
        },

        // these will be used when ['DecisionTreeClassifier']['trials']['run']==false
        //
        // these are the results of running grid search on preprocessed data sets with digest d6a76cbd7fb874262adbd0e4a705fc31
        "params": {   
            "criterion": "gini",
            "max_depth": 10,
            "max_features": "auto",
            "min_samples_split": 2,
            "random_state": 42,
            "splitter": "best"
        }
    },

    "RandomForestClassifier": {
        "run": true,

        "trials": {
            "run": false,

            "array": [
                {
                    "gridsearch": {
                        "run": true,

                        "param_grid": {
                            "bootstrap": [true, false], 
                            "criterion": ["entropy", "gini"], 
                            "max_features": ["auto", "sqrt", "log2"], 
                            "max_depth": [10, 50, 75, null], 
                            "n_estimators": [100, 500, 1000]
                        },

                        // don't forget to update this after grid search... and then set grid search to false... if the intention is to find a new best_params via grid search
                        //      these will be used when ['RandomForestClassifier']['trials']['run']==true AND ['RandomForestClassifier']['trials']['array'][n]['gridsearch']['run']==false
                        //          in this way, we can turn on/off gridsearch for individual trials
                        //
                        // these are the results of running grid search on preprocessed data sets with digest d6a76cbd7fb874262adbd0e4a705fc31
                        "last_best": {   
                            "bootstrap": false,
                            "criterion": "gini",
                            "max_depth": 75,
                            "max_features": "auto",
                            "n_estimators": 1000
                        }
                    }
                }
            ]
        },

        // don't forget to update this after grid search... and then set grid search to false... if the intention is to find a new best_params via grid search
        //      these will be used when ['DecisionTreeClassifier']['trials']['run']==false
        //
        // these are the results of running grid search on preprocessed data sets with digest d6a76cbd7fb874262adbd0e4a705fc31
        "params": {   
            "bootstrap": true,
            "criterion": "gini",
            "max_depth": 75,
            "max_features": "auto",
            "n_estimators": 1000
        }
    },

    "XGBClassifier": {
        "run": false,

        "trials": {
            "run": false,

            // for XGBClassifier, we break up gridsearch into trials and manipulate a single parameter at a time, building on prior results... since gridsearch takes so much time
            "array": [
                
                {
                    "gridsearch": {
                        "run": true,

                        "param_grid": {
                            // 10 is default
                            "max_depth": [10, 15, 20]
                        },

                        "last_best": {}
                    }
                },
                
                {
                    "gridsearch": {
                        "run": true,

                        "param_grid": {
                            // 100 is default
                            "n_estimators": [365, 368]
                        },

                        "last_best": {}
                    }
                },


                {
                    "gridsearch": {
                        "run": true,

                        "param_grid": {
                            // 0 is default
                            "gamma": [0, 1, 2, 3, 4, 5]
                        },

                        "last_best": {}
                    }
                },
                
                {
                    "gridsearch": {
                        "run": true,

                        "param_grid": {
                            // 0.1 is default
                            "learning_rate": [0.1, 0.3, 0.6, 0.9, 1.0]
                        },

                        "last_best": {}
                    }
                },
                
                {
                    "gridsearch": {
                        "run": true,

                        "param_grid": {
                            // 1 is default
                            "min_child_weight": [1, 2, 3, 4, 5]
                        },

                        "last_best": {}
                    }
                }
            ]
        },

        // these are the results of running grid search on preprocessed data sets with digest 8a48b1bceea8e4f07957e8a9efbe76d8
        "params": {   
            "gamma": 0,
            "learning_rate": 0.1,
            "max_depth": 10,
            "min_child_weight": 1,
            "n_estimators": 368
        }
    },
    
    "CatBoostClassifier": {
        "run": true,

        "trials": {
            "run": false,
            
            "array": [
            
                {
                    "gridsearch": {
                        "run": true,

                        "param_grid": {
                            // "Logloss" is default but we obviously want a variant of multiclass
                            "loss_function": ["MultiClass", "MultiClassOneVsAll"]
                        },

                        "last_best": {}
                    }
                },
                
                {
                    "gridsearch": {
                        "run": true,

                        "param_grid": {
                            // "SymmetricTree" is default
                            "grow_policy": ["SymmetricTree", "Depthwise", "Lossguide"]
                        },

                        "last_best": {}
                    }
                },
                
                {
                    "gridsearch": {
                        "run": true,

                        "param_grid": {
                            // 6 is default
                            "max_depth": [6, 10, 16]
                        },

                        "last_best": {}
                    }
                },
                
                {
                    "gridsearch": {
                        "run": true,

                        "param_grid": {
                            // 1000 is default
                            "n_estimators": [100, 500, 1000]
                        },

                        "last_best": {}
                    }
                },
                
                {
                    "gridsearch": {
                        "run": true,

                        "param_grid": {
                            // 1 is default
                            "min_data_in_leaf": [1, 2, 5]
                        },

                        "last_best": {}
                    }
                },
                
                {
                    "gridsearch": {
                        "run": true,

                        "param_grid": {
                            // 31 is default
                            "max_leaves": [15, 23, 31]
                        },

                        "last_best": {}
                    }
                },
                
                {
                    "gridsearch": {
                        "run": true,

                        "param_grid": {
                            // "Min" is default
                            "nan_mode": ["Min", "Max"]
                        },

                        "last_best": {}
                    }
                }
            ]
        },
        
        "params": 
        {   
            "grow_policy": "Depthwise",
            "loss_function": "MultiClass",
            "max_depth": 10,
            "n_estimators": 1000,
            "nan_mode": "Min"
        }
    },
    
    
    "SVM_RBF": {
        "run": true,

        "trials": {
            "run": true,
            
            "array": [
                {
                    "gridsearch": {
                        "run": true,

                        "param_grid": {
                            //default is 1.0
                            "C": [1, 10]
                        },

                        "last_best": {}
                    }
                },
                
                {
                    "gridsearch": {
                        "run": true,

                        "param_grid": {
                            // default=’scale’
                            "gamma": [1, 100]
                        },

                        "last_best": {}
                    }
                }
            ]
        },
        
        "params": {}
    },
    
    "SVM_Poly": {
        "run": false,

        "trials": {
            "run": true,
            
            "array": [
                {
                    "gridsearch": {
                        "run": true,

                        "param_grid": {
                            // default=3
                            "degree": [3, 4]
                        },

                        "last_best": {}
                    }
                },
                
                {
                    "gridsearch": {
                        "run": true,

                        "param_grid": {
                        //default is 0.0
                            "coef0": [0.1, 2]
                        },

                        "last_best": {}
                    }
                },
                
                {
                    "gridsearch": {
                        "run": true,

                        "param_grid": {
                            // default=’scale’
                            "gamma": [0.1, 1]
                        },

                        "last_best": {}
                    }
                }
            ]
        },
        
        "params": {}
    }
}