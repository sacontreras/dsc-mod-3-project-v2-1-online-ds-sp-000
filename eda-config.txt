{
    //official data
    "official_data": {
        "unlabeled_predictors": {
            "url": "https://s3.amazonaws.com/drivendata-prod/data/7/public/702ddfc5-68cd-4d1d-a0de-f5f566f76d91.csv",
            "local_fname": "Taarifa-Unlabeled-Predictors.csv"
        },

        "labeled_predictors": {
            "url": "https://s3.amazonaws.com/drivendata-prod/data/7/public/4910797b-ee55-40a7-8668-10efd5c1b960.csv",
            "local_fname": "Taarifa-Labeled-Predictors.csv"
        },

        "labels": {
            "url": "https://s3.amazonaws.com/drivendata-prod/data/7/public/0bf8bc6e-30d0-4c50-956a-603fc693d966.csv",
            "local_fname": "Taarifa-Labels.csv"
        }
    },

    "eda_desc": {
        "short": "0.10 test_ratio"
    },

    // ratio/size of the validation data (taken from labeled predictors)
    "test_ratio": 0.10,

    //the random_state seed used throughout the project
    "SEED": 42,

    "missing_string_value_replacement": "none",
    



    "feature_groupings": {
        "amount_tsh": {
            "description": {
                "type": "provided",
                "description": "'Total static head (amount water available to waterpoint)'"
            },

            "features": ["amount_tsh"],

            "preprocessing_strategy": [
                // amount_tsh is numeric, so options are as follows:
                //["amount_tsh", "C__leave_it_as_is__StrategyTransformer"]
                //["amount_tsh", "C__target_encode__not_LOO__post_encode_null_to_global_mean__StrategyTransformer"]
                //["amount_tsh", "C__target_encode__not_LOO__not_post_encode_null_to_global_mean__StrategyTransformer"]
                //["amount_tsh", "C__target_encode__LOO__post_encode_null_to_global_mean__StrategyTransformer"]
                //["amount_tsh", "C__target_encode__LOO__not_post_encode_null_to_global_mean__StrategyTransformer"]
                //["amount_tsh", "C__replace_0_with_nan__StrategyTransformer"]
                //["amount_tsh", "C__replace_outliers_with_mean__StrategyTransformer"]
                //["amount_tsh", "C__replace_outliers_with_median__StrategyTransformer"]
                ["amount_tsh", "C__drop_it__StrategyTransformer"]   // *** CONFIRMED BEST ACCURACY ***
            ]
        },

        "pump_age_at_observation_date": {
            "description": {
                "type": "engineered",
                "description": "'The date the row was entered' - 'Year the waterpoint was constructed'"
            },

            "features": ["date_recorded", "construction_year"],

            "preprocessing_strategy": [
                // pump_age is a NEW/engineered feature, so there is only one option:
                ["pump_age", "C__required_proprocessing__pump_age__StrategyTransformer"]

                // if the desire is to NOT create this new engineered feature, then this entire node (rooted at "pump_age_at_observation_date) should be removed
                //      as a result, then date_recorded and construction_year features MUST be handled - dropping them is a viable option, or keeping them
                //      individually and doing some of the transformations on them that were explored in the EDA notebook
                //          e.g. lcasing, replacing nulls and 0-values, etc.
            ]
        },

        "funder": {
            "description": {
                "type": "provided",
                "description": "'Who funded the well'"
            },

            "features": ["funder"],

            "preprocessing_strategy": [
                // funder is categorical-string, so leaving it as is is not an option
                //      note that if this feature is kept, then it must ALWAYS be preprocessed with C__required_proprocessing__funder__StrategyTransformer FIRST
                //          before subsequent processing - in this case, preprocessing (within that class) includes converting to lcase, etc. but see class for details
                //      options are as follows:
                //["funder", "C__required_proprocessing__funder__StrategyTransformer"],
                //["funder", "C__target_encode__not_LOO__post_encode_null_to_global_mean__StrategyTransformer"]

                //["funder", "C__required_proprocessing__funder__StrategyTransformer"],
                //["funder", "C__target_encode__not_LOO__not_post_encode_null_to_global_mean__StrategyTransformer"]

                //["funder", "C__required_proprocessing__funder__StrategyTransformer"],
                //["funder", "C__target_encode__LOO__post_encode_null_to_global_mean__StrategyTransformer"]

                //["funder", "C__required_proprocessing__funder__StrategyTransformer"],
                //["funder", "C__target_encode__LOO__not_post_encode_null_to_global_mean__StrategyTransformer"]

                //["funder", "C__required_proprocessing__funder__StrategyTransformer"],
                //["funder", "C__tfidf_kmeans_classify__funder__StrategyTransformer"], //new feature funder_tfidf_kmeans_class exists after this
                //["funder_tfidf_kmeans_class", "C__target_encode__not_LOO__post_encode_null_to_global_mean__StrategyTransformer"]

                //["funder", "C__required_proprocessing__funder__StrategyTransformer"],
                //["funder", "C__tfidf_kmeans_classify__funder__StrategyTransformer"], //new feature funder_tfidf_kmeans_class exists after this
                //["funder_tfidf_kmeans_class", "C__target_encode__not_LOO__not_post_encode_null_to_global_mean__StrategyTransformer"]

                //["funder", "C__required_proprocessing__funder__StrategyTransformer"],
                //["funder", "C__tfidf_kmeans_classify__funder__StrategyTransformer"], //new feature funder_tfidf_kmeans_class exists after this
                //["funder_tfidf_kmeans_class", "C__target_encode__LOO__post_encode_null_to_global_mean__StrategyTransformer"]

                //["funder", "C__required_proprocessing__funder__StrategyTransformer"],
                //["funder", "C__tfidf_kmeans_classify__funder__StrategyTransformer"], //new feature funder_tfidf_kmeans_class exists after this
                //["funder_tfidf_kmeans_class", "C__target_encode__LOO__not_post_encode_null_to_global_mean__StrategyTransformer"]

                ["funder", "C__drop_it__StrategyTransformer"]   // *** CONFIRMED BEST ACCURACY ***
            ]
        },

        "gps_height": {
            "description": {
                "type": "provided",
                "description": "'Altitude of the well'"
            },

            "features": ["gps_height"],

            "preprocessing_strategy": [
                // gps_height is numeric, so options are as follows
                //      C__leave_it_as_is__StrategyTransformer (*** BEST ACCURACY ***)
                //      C__target_encode__not_LOO__post_encode_null_to_global_mean__StrategyTransformer
                //      C__target_encode__not_LOO__not_post_encode_null_to_global_mean__StrategyTransformer
                //      C__target_encode__LOO__post_encode_null_to_global_mean__StrategyTransformer
                //      C__target_encode__LOO__not_post_encode_null_to_global_mean__StrategyTransformer
                //      C__replace_0_with_nan__StrategyTransformer
                //      C__replace_outliers_with_mean__StrategyTransformer
                //      C__replace_outliers_with_median__StrategyTransformer
                //      C__drop_it__StrategyTransformer  
                ["gps_height", "C__leave_it_as_is__StrategyTransformer"]
            ]
        },

        "installer": {
            "description": {
                "type": "provided",
                "description": "'Organization that installed the well'"
            },

            "features": ["installer"],

            "preprocessing_strategy": [
                // installer is categorical-string, so leaving it as is is not an option; options are as follows:
                //      C__target_encode__not_LOO__post_encode_null_to_global_mean__StrategyTransformer (*** BEST ACCURACY ***)
                //      C__target_encode__not_LOO__not_post_encode_null_to_global_mean__StrategyTransformer
                //      C__target_encode__LOO__post_encode_null_to_global_mean__StrategyTransformer
                //      C__target_encode__LOO__not_post_encode_null_to_global_mean__StrategyTransformer
                //      C__drop_it__StrategyTransformer 
                ["installer", "C__target_encode__not_LOO__post_encode_null_to_global_mean__StrategyTransformer"]
            ]
        },

        "gps_coordinates": {
            "description": {
                "type": "provided",
                "description": "('GPS coordinate' (latitude), 'GPS coordinate' (longitude))"
            },

            "features": ["latitude", "longitude"],

            "preprocessing_strategy": [
                //note that these constitute an ordered-pair (of continuous values), so if we drop one we must drop the other
                //  the same holds for scaling if we do it
                //"weird" values (but not outliers) can be handled individually in each
                //NO outlier processing!
                ["latitude", "C__leave_it_as_is__StrategyTransformer"],
                ["longitude", "C__leave_it_as_is__StrategyTransformer"]
            ]
        },

        "wpt_name": {
            "description": {
                "type": "provided",
                "description": "'Name of the waterpoint if there is one'"
            },

            "features": ["wpt_name"],

            "preprocessing_strategy": [
                // wpt_name is categorical-string, so leaving it as is is not an option; options are as follows:
                //      C__target_encode__not_LOO__post_encode_null_to_global_mean__StrategyTransformer 
                //      C__target_encode__not_LOO__not_post_encode_null_to_global_mean__StrategyTransformer
                //      C__target_encode__LOO__post_encode_null_to_global_mean__StrategyTransformer
                //      C__target_encode__LOO__not_post_encode_null_to_global_mean__StrategyTransformer
                //      C__drop_it__StrategyTransformer (*** BEST ACCURACY ***)
                ["wpt_name", "C__target_encode__not_LOO__post_encode_null_to_global_mean__StrategyTransformer"]
            ]
        },

        "num_private": {
            "description": {
                "type": "provided",
                "description": "" //no description was provided, so we don't really know what this is based purely on description
            },

            "features": ["num_private"],

            "preprocessing_strategy": [
                // num_private is numeric and there is only one value! there is only one thing to do
                //      C__drop_it__StrategyTransformer
                ["num_private", "C__drop_it__StrategyTransformer"]
            ]
        },

        "basin": {
            "description": {
                "type": "provided",
                "description": "'Geographic water basin'"
            },

            "features": ["basin"],

            "preprocessing_strategy": [
                // basin is categorical-string, so leaving it as is is not an option; options are as follows:
                //      C__target_encode__not_LOO__post_encode_null_to_global_mean__StrategyTransformer (*** BEST ACCURACY ***)
                //      C__target_encode__not_LOO__not_post_encode_null_to_global_mean__StrategyTransformer
                //      C__target_encode__LOO__post_encode_null_to_global_mean__StrategyTransformer
                //      C__target_encode__LOO__not_post_encode_null_to_global_mean__StrategyTransformer
                //      C__drop_it__StrategyTransformer 
                ["basin", "C__target_encode__not_LOO__post_encode_null_to_global_mean__StrategyTransformer"]
            ]
        },

        "geographic_location": {
            "description": {
                "type": "provided",
                "description": "'Geographic location'"
            },

            "features": ["region_code", "district_code", "subvillage", "region", "lga", "ward"],

            "preprocessing_strategy": [
                // region_code is clearly categorical (numeric, not ordinal):
                //      C__target_encode__not_LOO__post_encode_null_to_global_mean__StrategyTransformer (*** BEST ACCURACY ***)
                //      C__target_encode__not_LOO__not_post_encode_null_to_global_mean__StrategyTransformer
                //      C__target_encode__LOO__post_encode_null_to_global_mean__StrategyTransformer
                //      C__target_encode__LOO__not_post_encode_null_to_global_mean__StrategyTransformer
                //      C__drop_it__StrategyTransformer 
                ["region_code", "C__target_encode__not_LOO__post_encode_null_to_global_mean__StrategyTransformer"],

                // district_code is clearly categorical (numeric, not ordinal):
                //      C__target_encode__not_LOO__post_encode_null_to_global_mean__StrategyTransformer (*** BEST ACCURACY ***)
                //      C__target_encode__not_LOO__not_post_encode_null_to_global_mean__StrategyTransformer
                //      C__target_encode__LOO__post_encode_null_to_global_mean__StrategyTransformer
                //      C__target_encode__LOO__not_post_encode_null_to_global_mean__StrategyTransformer
                //      C__drop_it__StrategyTransformer 
                ["district_code", "C__target_encode__not_LOO__post_encode_null_to_global_mean__StrategyTransformer"],


                //subvillage, region, lga, and ward are string representations of information captured by the above, so there is only one thing to for each
                ["subvillage", "C__drop_it__StrategyTransformer"],
                ["region", "C__drop_it__StrategyTransformer"],
                ["lga", "C__drop_it__StrategyTransformer"],
                ["ward", "C__drop_it__StrategyTransformer"]
            ]
        },

        "population": {
            "description": {
                "type": "provided",
                "description": "'Population around the well'"
            },

            "features": ["population"],

            "preprocessing_strategy": [
                // population is numeric, so options are as follows
                //      C__leave_it_as_is__StrategyTransformer
                //      C__target_encode__not_LOO__post_encode_null_to_global_mean__StrategyTransformer
                //      C__target_encode__not_LOO__not_post_encode_null_to_global_mean__StrategyTransformer
                //      C__target_encode__LOO__post_encode_null_to_global_mean__StrategyTransformer
                //      C__target_encode__LOO__not_post_encode_null_to_global_mean__StrategyTransformer
                //      C__replace_0_with_nan__StrategyTransformer
                //      C__replace_outliers_with_mean__StrategyTransformer (*** BEST ACCURACY ***)
                //      C__replace_outliers_with_median__StrategyTransformer
                //      C__drop_it__StrategyTransformer 
                ["region_code", "C__replace_outliers_with_mean__StrategyTransformer"]
            ] 
        },

        "public_meeting": {
            "description": {
                "type": "provided",
                "description": "'True/False'"
            },

            "features": ["public_meeting"],

            "preprocessing_strategy": [
                // public_meeting is clearly boolean
                //  TO DO: create required-preprocessing StrategyTransformer
                ["public_meeting", "C__leave_it_as_is__StrategyTransformer"]
            ] 
        },

        "recorded_by": {
            "description": {
                "type": "provided",
                "description": "'Group entering this row of data'"
            },

            "features": ["recorded_by"],

            "preprocessing_strategy": [
                // recorded_by is categorical-string, so leaving it as is is not an option; options are as follows:
                //      C__target_encode__not_LOO__post_encode_null_to_global_mean__StrategyTransformer 
                //      C__target_encode__not_LOO__not_post_encode_null_to_global_mean__StrategyTransformer
                //      C__target_encode__LOO__post_encode_null_to_global_mean__StrategyTransformer
                //      C__target_encode__LOO__not_post_encode_null_to_global_mean__StrategyTransformer
                //      C__drop_it__StrategyTransformer (*** BEST ACCURACY ***)
                ["recorded_by", "C__drop_it__StrategyTransformer"]
            ] 
        },

        "wpt_operator": {
            "description": {
                "type": "provided",
                "description": "'Who operates the waterpoint'"
            },

            "features": ["scheme_management", "scheme_name"],

            "preprocessing_strategy": [
                // scheme_management is categorical-string, so leaving it as is is not an option; options are as follows:
                //      C__target_encode__not_LOO__post_encode_null_to_global_mean__StrategyTransformer (*** BEST ACCURACY ***)
                //      C__target_encode__not_LOO__not_post_encode_null_to_global_mean__StrategyTransformer
                //      C__target_encode__LOO__post_encode_null_to_global_mean__StrategyTransformer
                //      C__target_encode__LOO__not_post_encode_null_to_global_mean__StrategyTransformer
                //      C__drop_it__StrategyTransformer
                ["scheme_management", "C__target_encode__not_LOO__post_encode_null_to_global_mean__StrategyTransformer"],

                // scheme_name is categorical-string, so leaving it as is is not an option; options are as follows:
                //      C__target_encode__not_LOO__post_encode_null_to_global_mean__StrategyTransformer (*** BEST ACCURACY ***)
                //      C__target_encode__not_LOO__not_post_encode_null_to_global_mean__StrategyTransformer
                //      C__target_encode__LOO__post_encode_null_to_global_mean__StrategyTransformer
                //      C__target_encode__LOO__not_post_encode_null_to_global_mean__StrategyTransformer
                //      C__drop_it__StrategyTransformer
                ["scheme_name", "C__target_encode__not_LOO__post_encode_null_to_global_mean__StrategyTransformer"]
            ] 
        },

        "permit": {
            "description": {
                "type": "provided",
                "description": "'True/False'"
            },

            "features": ["permit"],

            "preprocessing_strategy": [
                // permit is clearly boolean
                //  TO DO: create required-preprocessing StrategyTransformer
                ["permit", "C__leave_it_as_is__StrategyTransformer"]
            ] 
        },

        "wpt_extraction_type_class": {
            "description": {
                "type": "provided",
                "description": "'The kind of extraction the waterpoint uses'"
            },

            "features": ["extraction_type", "extraction_type_group", "extraction_type_class"],

            "preprocessing_strategy": [
                // extraction_type is categorical-string, so leaving it as is is not an option; options are as follows:
                //      C__target_encode__not_LOO__post_encode_null_to_global_mean__StrategyTransformer (*** BEST ACCURACY ***)
                //      C__target_encode__not_LOO__not_post_encode_null_to_global_mean__StrategyTransformer
                //      C__target_encode__LOO__post_encode_null_to_global_mean__StrategyTransformer
                //      C__target_encode__LOO__not_post_encode_null_to_global_mean__StrategyTransformer
                //      C__drop_it__StrategyTransformer
                ["extraction_type", "C__target_encode__not_LOO__post_encode_null_to_global_mean__StrategyTransformer"],

                // extraction_type_group is categorical-string but duplicates extraction_type:
                //      C__drop_it__StrategyTransformer
                ["extraction_type_group", "C__drop_it__StrategyTransformer"],

                // extraction_type_class is categorical-string but duplicates extraction_type:
                //      C__drop_it__StrategyTransformer
                ["extraction_type_class", "C__drop_it__StrategyTransformer"]
            ] 
        },

        "wpt_management": {
            "description": {
                "type": "provided",
                "description": "'How the waterpoint is managed'"
            },

            "features": ["management", "management_group"],

            "preprocessing_strategy": [
                // management is categorical-string, so leaving it as is is not an option; options are as follows:
                //      C__target_encode__not_LOO__post_encode_null_to_global_mean__StrategyTransformer (*** BEST ACCURACY ***)
                //      C__target_encode__not_LOO__not_post_encode_null_to_global_mean__StrategyTransformer
                //      C__target_encode__LOO__post_encode_null_to_global_mean__StrategyTransformer
                //      C__target_encode__LOO__not_post_encode_null_to_global_mean__StrategyTransformer
                //      C__drop_it__StrategyTransformer
                ["management", "C__target_encode__not_LOO__post_encode_null_to_global_mean__StrategyTransformer"],

                // management_group is categorical-string but duplicates management:
                //      C__drop_it__StrategyTransformer
                ["management_group", "C__drop_it__StrategyTransformer"]
            ] 
        },

        "payment_frequency_class": {
            "description": {
                "type": "provided",
                "description": "'What the water costs'" // this is an awful description, actually, but whatever...
            },

            "features": ["payment", "payment_type"],

            "preprocessing_strategy": [
                // payment_type is categorical-string, so leaving it as is is not an option; options are as follows:
                //      C__target_encode__not_LOO__post_encode_null_to_global_mean__StrategyTransformer (*** BEST ACCURACY ***)
                //      C__target_encode__not_LOO__not_post_encode_null_to_global_mean__StrategyTransformer
                //      C__target_encode__LOO__post_encode_null_to_global_mean__StrategyTransformer
                //      C__target_encode__LOO__not_post_encode_null_to_global_mean__StrategyTransformer
                //      C__drop_it__StrategyTransformer
                ["payment_type", "C__target_encode__not_LOO__post_encode_null_to_global_mean__StrategyTransformer"],

                // payment is categorical-string but duplicates payment_type:
                //      C__drop_it__StrategyTransformer
                ["payment", "C__drop_it__StrategyTransformer"]
            ] 
        },

        "water_quality_class": {
            "description": {
                "type": "provided",
                "description": "'The quality of the water'"
            },

            "features": ["water_quality", "quality_group"],

            "preprocessing_strategy": [
                // water_quality is categorical-string, so leaving it as is is not an option; options are as follows:
                //      C__target_encode__not_LOO__post_encode_null_to_global_mean__StrategyTransformer (*** BEST ACCURACY ***)
                //      C__target_encode__not_LOO__not_post_encode_null_to_global_mean__StrategyTransformer
                //      C__target_encode__LOO__post_encode_null_to_global_mean__StrategyTransformer
                //      C__target_encode__LOO__not_post_encode_null_to_global_mean__StrategyTransformer
                //      C__drop_it__StrategyTransformer
                ["water_quality", "C__target_encode__not_LOO__post_encode_null_to_global_mean__StrategyTransformer"],

                // quality_group is categorical-string but duplicates water_quality:
                //      C__drop_it__StrategyTransformer
                ["quality_group", "C__drop_it__StrategyTransformer"]
            ] 
        },

        "water_quantity_class": {
            "description": {
                "type": "provided",
                "description": "'The quantity of water'"
            },

            "features": ["quantity", "quantity_group"],

            "preprocessing_strategy": [
                // quantity is categorical-string, so leaving it as is is not an option; options are as follows:
                //      C__target_encode__not_LOO__post_encode_null_to_global_mean__StrategyTransformer (*** BEST ACCURACY ***)
                //      C__target_encode__not_LOO__not_post_encode_null_to_global_mean__StrategyTransformer
                //      C__target_encode__LOO__post_encode_null_to_global_mean__StrategyTransformer
                //      C__target_encode__LOO__not_post_encode_null_to_global_mean__StrategyTransformer
                //      C__drop_it__StrategyTransformer
                ["quantity", "C__target_encode__not_LOO__post_encode_null_to_global_mean__StrategyTransformer"],

                // quantity_group is categorical-string but duplicates quantity:
                //      C__drop_it__StrategyTransformer
                ["quantity_group", "C__drop_it__StrategyTransformer"]
            ] 
        },

        "water_source_type_class": {
            "description": {
                "type": "provided",
                "description": "'The source of the water'"
            },

            "features": ["source", "source_type", "source_class"],

            "preprocessing_strategy": [
                // source is categorical-string, so leaving it as is is not an option; options are as follows:
                //      C__target_encode__not_LOO__post_encode_null_to_global_mean__StrategyTransformer (*** BEST ACCURACY ***)
                //      C__target_encode__not_LOO__not_post_encode_null_to_global_mean__StrategyTransformer
                //      C__target_encode__LOO__post_encode_null_to_global_mean__StrategyTransformer
                //      C__target_encode__LOO__not_post_encode_null_to_global_mean__StrategyTransformer
                //      C__drop_it__StrategyTransformer
                ["source", "C__target_encode__not_LOO__post_encode_null_to_global_mean__StrategyTransformer"],

                // source_type is categorical-string but duplicates source:
                //      C__drop_it__StrategyTransformer
                ["source_type", "C__drop_it__StrategyTransformer"],

                // source_class is categorical-string but duplicates source:
                //      C__drop_it__StrategyTransformer
                ["source_class", "C__drop_it__StrategyTransformer"]
            ] 
        },

        "wpt_type_class": {
            "description": {
                "type": "provided",
                "description": "'The kind of waterpoint'"
            },

            "features": ["waterpoint_type", "waterpoint_type_group"],

            "preprocessing_strategy": [
                // waterpoint_type is categorical-string, so leaving it as is is not an option; options are as follows:
                //      C__target_encode__not_LOO__post_encode_null_to_global_mean__StrategyTransformer (*** BEST ACCURACY ***)
                //      C__target_encode__not_LOO__not_post_encode_null_to_global_mean__StrategyTransformer
                //      C__target_encode__LOO__post_encode_null_to_global_mean__StrategyTransformer
                //      C__target_encode__LOO__not_post_encode_null_to_global_mean__StrategyTransformer
                //      C__drop_it__StrategyTransformer
                ["waterpoint_type", "C__target_encode__not_LOO__post_encode_null_to_global_mean__StrategyTransformer"],

                // waterpoint_type_group is categorical-string but duplicates waterpoint_type:
                //      C__drop_it__StrategyTransformer
                ["waterpoint_type_group", "C__drop_it__StrategyTransformer"]
            ] 
        }
    },




    "wrangled_data": {
        "dir": "preprocessing-results",
        
        "fname_ext": "csv",

        "train": {
            "fname_prefix": "wrangled-labeled-data-train"
        },
        "test": {
            "fname_prefix": "wrangled-labeled-data-test"
        },
        "unlabeled": {
            "fname_prefix": "wrangled-unlabeled-data"
        }
    },

    "labels": {
        "dir": "preprocessing-results",
        
        "fname_ext": "csv",

        "train": {
            "fname_prefix": "labels-train"
        },
        "test": {
            "fname_prefix": "labels-test"
        }
    }
}